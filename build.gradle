buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'com.google.cloud.tools.jib' version '2.6.0' apply(false)
 //   id "fr.brouillard.oss.gradle.jgitver" version "0.9.1"
    id 'net.researchgate.release' version '2.8.1'

}

allprojects {
    group = 'jpdemo.reactive-greeting'
    version = "${version}"
}

repositories {
    mavenCentral()
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: 'jacoco'
  //  apply plugin: 'fr.brouillard.oss.gradle.jgitver'

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
        maven {
            name = "proto GitHubPackages"
            url = 'https://maven.pkg.github.com/JPDemo/proto'
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }


    dependencies{
        annotationProcessor 'org.projectlombok:lombok'
        implementation "jpdemo:proto:1.5"
        // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
        testCompile group: 'io.projectreactor', name: 'reactor-test', version: '3.3.10.RELEASE'
       testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testCompile 'org.assertj:assertj-core:3.11.1'
    }

  /*  jgitver {
        mavenLike true
    }
*/
    test {
        useJUnitPlatform()
    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    if(project.tasks.findByName('jib')!=null) {
        println "sub projects jib config found - attaching afterReleaseBuild hook"
        afterReleaseBuild.dependsOn(project.tasks.findByName('jib'))
    }

    project.apply from: '../.jacoco/subproject-jacoco-report.gradle'
    afterEvaluate { project ->
        //generate jacoco report at sub project level
        //project.apply from: '../.jacoco/subproject-jacoco-report.gradle'
        println "After Evaluate"
        // add jib hook so it executes during a release
        if(project.tasks.findByName('jib')!=null) {
            println "sub projects jib config found - attaching afterReleaseBuild hook"
            afterReleaseBuild.dependsOn(project.tasks.findByName('jib'))
        }
    }


/*    test.useTestNG()*/
}


// Override net.researchgate.release configuration
release {
    git{
        //default branch for plugin is master
        requireBranch='main'
    }
}



bootJar {
    enabled = false
}

//generate jacoco report at root level
apply from: './.jacoco/root-jacoco-report.gradle'

