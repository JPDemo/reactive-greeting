buildscript {
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'com.google.cloud.tools.jib' version '2.6.0' apply(false)

}

sourceCompatibility = '11'
targetCompatibility = '11'

/*

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}
*/

allprojects {
    group = 'jpdemo.reactive-greeting'
    version = '0.0.1-SNAPSHOT'

}
repositories {
    mavenCentral()
}
subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
        maven {
            name = "proto GitHubPackages"
            url = 'https://maven.pkg.github.com/JPDemo/proto'
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }


    dependencies{
        annotationProcessor 'org.projectlombok:lombok'
        implementation "jpdemo:proto:1.5"
        // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
        testCompile group: 'io.projectreactor', name: 'reactor-test', version: '3.3.10.RELEASE'
       testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testCompile 'org.assertj:assertj-core:3.11.1'
    }


    test {
        useJUnitPlatform()
    }
    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    //generate jacoco report at sub project level
    afterEvaluate { project ->
        project.apply from: '../.jacoco/subproject-jacoco-report.gradle'
    }


/*    test.useTestNG()*/
}

bootJar {
    enabled = false
}

//generate jacoco report at root level
apply from: './.jacoco/root-jacoco-report.gradle'
